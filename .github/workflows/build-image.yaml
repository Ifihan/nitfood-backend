name: Nitfood deployment

on:
  push:
    branches:
    - "deploy"
  pull_request:
    branches:
    - "hotfix"
    # - "main"

env:
  FORCE_COLOR: 3 #enables color coding in the CI output, to help with  easy identification of errors or warnings or success messages
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy: #pipeline steps for a particular branch
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install libpq-dev gcc

    - name: Install pipenv and dependencies
      run: |
        pip install -U pipenv
        pipenv install --system --deploy --ignore-pipfile

  hotfix:
    runs-on: ubuntu-latest
    #Sets the permissions granted to the TOKEN_GIT for the actions in this job.
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/hotfix' || github.event.pull_request.base.ref == 'hotfix'
    needs: ['deploy']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    #Uses the docker/login-action action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_GIT }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build, tag, and push image to GHCR
      # env:
      #   IMAGE_TAG: ${{ steps.meta.outputs.tags }}
      id: build-image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: |
          type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
        script: |
          docker pull ${{ steps.meta.outputs.tags }}

  main:
    runs-on: ubuntu-latest
    #Sets the permissions granted to the TOKEN_GIT for the actions in this job.
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
    needs: ['hotfix']
    steps:
    - name: Deploy to On-Prem Server
      uses: appleboy/ssh-action@master
      env:
        PUSHED_IMAGE: ${{ steps.meta.outputs.tags }}
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        #docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        #docker run -d --name django-app -p 8000:8000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        script: |
          docker pull ${{ steps.meta.outputs.tags }}

          docker stop django-app || true
          docker rm django-app || true
          docker run -d --name django-app -p 8000:8000 ${{ env.PUSHED_IMAGE }}

